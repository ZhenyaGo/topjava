package ru.javawebinar.topjava.util;import org.springframework.format.Formatter;import java.text.ParseException;import java.time.LocalDate;import java.time.LocalTime;import java.time.format.DateTimeFormatter;import java.util.Locale;import static ru.javawebinar.topjava.util.DateTimeUtil.parseLocalDate;import static ru.javawebinar.topjava.util.DateTimeUtil.parseLocalTime;public class DateFormatConfiguration {    public static class LocalDateFormatter implements Formatter<LocalDate> {        @Override        public LocalDate parse(String text, Locale locale) throws ParseException {            return parseLocalDate(text);        }        @Override        public String print(LocalDate object, Locale locale) {            return object.format(DateTimeFormatter.ISO_LOCAL_DATE);        }    }    public static class LocalTimeFormatter implements Formatter<LocalTime> {        @Override        public LocalTime parse(String text, Locale locale) throws ParseException {            return parseLocalTime(text);        }        @Override        public String print(LocalTime object, Locale locale) {            return object.format(DateTimeFormatter.ISO_LOCAL_DATE);        }    }////    @Bean//    @Override//    public FormattingConversionService mvcConversionService() {//        DefaultFormattingConversionService conversionService = new DefaultFormattingConversionService(false);////        DateTimeFormatterRegistrar registrar = new DateTimeFormatterRegistrar();//        registrar.setDateFormatter(DateTimeFormatter.ofPattern("yyyy-MM-dd"));//        registrar.setTimeFormatter(DateTimeFormatter.ofPattern("HH:mm:ss"));//        registrar.registerFormatters(conversionService);////        return conversionService;//    }}